import sqlite3
from contextlib import closing


class VulnerabilityDB:
    def __init__(self, db_path: str):
        """
        Initializes the VulnerabilityDB instance and opens a connection to the SQLite database.

        Args:
        - db_path: Path to the SQLite database.
        """
        self.db_path = db_path
        self.conn = sqlite3.connect(self.db_path)

    def get_package_names(self, vuln_id: str) -> set[str]:
        """
        Queries the database for distinct package names in the 'vulnerability' table where
        the namespace contains 'red' and the id matches the provided vuln_id.

        Args:
        - vuln_id: The vulnerability ID to search for.

        Returns:
        - A set of distinct package names matching the query.
        """
        query = """
        SELECT DISTINCT package_name 
        FROM vulnerability 
        WHERE namespace LIKE "%red%" AND id = ?
        """
        with closing(self.conn.cursor()) as cursor:
            cursor.execute(query, (vuln_id,))
            # Fetch all results and convert them to a set of strings
            results = {row[0] for row in cursor.fetchall()}
        return results

    def close(self):
        """Closes the database connection."""
        if self.conn:
            self.conn.close()
